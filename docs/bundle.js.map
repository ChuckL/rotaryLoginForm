{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://rotarylogin/./src/canvasDrawer.ts","webpack://rotarylogin/./src/inputText.ts","webpack://rotarylogin/./src/rotaryDialMachine.ts","webpack://rotarylogin/./src/rotaryValues.ts","webpack://rotarylogin/webpack/bootstrap","webpack://rotarylogin/./src/index.ts"],"sourcesContent":["import _ from 'lodash';\nimport { mainOffset, rotarySelectOffset } from './rotaryValues';\n\nconst circleRadius = 34;\nconst drawRadius = 160;\n\nconst baseOpts = {\n  lineWidth: 2,\n  color: '#AAAAAA',\n  fill: false,\n  clip: false\n};\n\nexport class CanvasDrawer {\n\n  constructor(private rotaryBaseCanvas, rotaryDialCanvas, rotaryPinCanvas, private rotaryValues) {\n    this.drawRotaryBase(rotaryBaseCanvas);\n    this.drawRotaryDial(rotaryDialCanvas);\n    this.drawRotaryPin(rotaryPinCanvas);\n  }\n\n  setRotaryValues(rotaryValues) {\n    this.rotaryValues = rotaryValues;\n    this.drawRotaryBase(this.rotaryBaseCanvas);\n  }\n\n  private drawRotaryBase(canvas) {\n    this.clearCanvas(canvas);\n    this.drawCircle(canvas, 0, 0, 285, { ...baseOpts, lineWidth: 4, fill: true, color: '#454545' });\n    this.drawCircle(canvas, 0, 0, 285, { ...baseOpts, lineWidth: 4 });\n\n    const drawRadiusText = 218;\n\n    this.rotaryValues.forEach((textObj, i) => {\n      this.drawText(canvas, drawRadiusText, mainOffset + rotarySelectOffset * i, circleRadius, textObj);\n      this.drawCircle(canvas, drawRadius, mainOffset + rotarySelectOffset * i, 4, { ...baseOpts, color: 'gold', fill: true });\n    });\n  }\n\n  private drawRotaryDial(canvas) {\n    const circleBackground = { ...baseOpts, color: '#252525', fill: true };\n    this.drawCircle(canvas, 0, 0, 200, circleBackground);\n\n    const circleOpts = { ...baseOpts, clip: true };\n    this.drawCircle(canvas, drawRadius, mainOffset + rotarySelectOffset * 0, circleRadius, circleOpts);\n    this.drawCircle(canvas, drawRadius, mainOffset + rotarySelectOffset * 1, circleRadius, circleOpts);\n    this.drawCircle(canvas, drawRadius, mainOffset + rotarySelectOffset * 2, circleRadius, circleOpts);\n    this.drawCircle(canvas, drawRadius, mainOffset + rotarySelectOffset * 3, circleRadius, circleOpts);\n    this.drawCircle(canvas, drawRadius, mainOffset + rotarySelectOffset * 4, circleRadius, circleOpts);\n    this.drawCircle(canvas, drawRadius, mainOffset + rotarySelectOffset * 5, circleRadius, circleOpts);\n    this.drawCircle(canvas, drawRadius, mainOffset + rotarySelectOffset * 6, circleRadius, circleOpts);\n    this.drawCircle(canvas, drawRadius, mainOffset + rotarySelectOffset * 7, circleRadius, circleOpts);\n    this.drawCircle(canvas, drawRadius, mainOffset + rotarySelectOffset * 8, circleRadius, circleOpts);\n    this.drawCircle(canvas, drawRadius, mainOffset + rotarySelectOffset * 9, circleRadius, circleOpts);\n    this.drawLineOnCircle(canvas, -30, 30, 0);\n    this.drawLineOnCircle(canvas, -30, 30, 45);\n    this.drawLineOnCircle(canvas, -30, 30, 90);\n    this.drawLineOnCircle(canvas, -30, 30, 135);\n  }\n\n  private drawRotaryPin(canvas) {\n    const context = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n\n    const theta = 50;\n\n    const { x: x1, y: y1 } = this.circleXY(150, theta);\n    const { x: x2, y: y2 } = this.circleXY(283, theta);\n\n    context.beginPath();\n    context.strokeStyle = '#EBEBEB';\n    context.fillStyle = '#EBEBEB';\n    context.lineWidth = 8;\n    context.moveTo(x1 + centerX, y1 + centerY);\n    context.lineTo(x2 + centerX, y2 + centerY);\n    context.stroke();\n  }\n\n  private drawLineOnCircle(canvas, radius1, radius2, theta) {\n    const context = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n\n    const { x: x1, y: y1 } = this.circleXY(radius1, theta);\n    const { x: x2, y: y2 } = this.circleXY(radius2, theta);\n\n    context.beginPath();\n    context.fillStyle = '#EBEBEB';\n    context.lineWidth = 8;\n    context.moveTo(x1 + centerX, y1 + centerY);\n    context.lineTo(x2 + centerX, y2 + centerY);\n    context.stroke();\n  }\n\n  private drawText(canvas: any, r: number, theta: number, radius, textObj) {\n    const context = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n\n    const { x, y } = this.circleXY(r, theta);\n    context.font = '28px Arial';\n    context.fillStyle = '#EBEBEB';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.fillText(textObj.text[0], x + centerX, y + centerY);\n\n    if (textObj.text.length > 1) {\n      const { x: x1, y: y1 } = this.circleXY(50, theta - 45);\n      const { x: x2, y: y2 } = this.circleXY(40, theta);\n      const { x: x3, y: y3 } = this.circleXY(50, theta + 45);\n\n      context.fillText(textObj.text[1], x1 + x + centerX, y1 + y + centerY);\n      context.fillText(textObj.text[2], x2 + x + centerX, y2 + y + centerY);\n      context.fillText(textObj.text[3], x3 + x + centerX, y3 + y + centerY);\n    }\n  }\n\n  private drawCircle(canvas: any, r: number, theta: number, radius, opts = baseOpts) {\n    const context = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n\n    const { x, y } = this.circleXY(r, theta);\n\n    context.beginPath();\n    context.arc(x + centerX, y + centerY, radius, 0, 2 * Math.PI, false);\n    context.lineWidth = opts.lineWidth;\n    context.strokeStyle = opts.color;\n    if (opts.clip) {\n      context.globalCompositeOperation = 'destination-out';\n      context.fill();\n      context.globalCompositeOperation = 'source-over';\n    }\n\n    if (opts.fill) {\n      context.fillStyle = opts.color;\n      context.fill();\n    } else {\n      context.stroke();\n    }\n    context.restore();\n  }\n\n  private clearCanvas(canvas) {\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  private circleXY(r: number, thetaRad: number) {\n    // Convert angle to radians\n    const theta = ((thetaRad - 90) * Math.PI) / 180;\n\n    return {\n      x: r * Math.cos(theta),\n      y: -r * Math.sin(theta)\n    };\n  }\n}\n","import { findValue as findRotaryValue } from './rotaryValues';\n\nexport class InputText {\n  private inputTextValue = '';\n  private inputTextAuxValue = '';\n  private promotionTimeout;\n  private rotaryValues;\n\n  constructor(private inputText, private inputTextAux, private rootElement, private isPassword, defaultRotaryValues) {\n    this.inputTextValue = rootElement.getAttribute('p') || '';\n    this.inputTextAuxValue = '';\n    this.rotaryValues = defaultRotaryValues;\n  }\n\n  setRotaryValues(rotaryValues) {\n    this.promoteAuxValue();\n    this.rotaryValues = rotaryValues;\n  }\n\n  setAuxIndex(index) {\n    console.log('aux index', index);\n    if (!this.rotaryValues[index]) return;\n\n    let value;\n    const currentRotaryAuxIndex = findRotaryValue(this.inputTextAuxValue, this.rotaryValues);\n    if (!currentRotaryAuxIndex\n      || currentRotaryAuxIndex.rowIndex !== index\n      || currentRotaryAuxIndex.valueIndex >= this.rotaryValues[index].text.length - 1\n    ) {\n      this.promoteAuxValue();\n      value = this.rotaryValues[index].text[0];\n    } else {\n      value = this.rotaryValues[index].text[currentRotaryAuxIndex.valueIndex + 1];\n    }\n\n    this.inputTextAuxValue = value;\n    this.redraw();\n  }\n\n  promoteAuxValue() {\n    this.stopPromotionTimeout();\n    if (this.inputTextAuxValue) {\n      this.inputTextValue = `${this.inputTextValue}${this.inputTextAuxValue}`;\n    }\n    this.inputTextAuxValue = '';\n    this.redraw();\n  }\n\n  redraw() {\n    const textValue = this.isPassword ? '*'.repeat(this.inputTextValue.length) : this.inputTextValue;\n    const textValueAux = this.isPassword ? '*'.repeat(this.inputTextAuxValue.length) : this.inputTextAuxValue;\n\n    this.inputText.textContent = textValue;\n    this.inputTextAux.textContent = textValueAux;\n    this.rootElement.setAttribute('p', `${this.inputTextValue}${this.inputTextAuxValue}`);\n  }\n\n  startPromotionTimeout() {\n    this.stopPromotionTimeout();\n    this.promotionTimeout = setTimeout(() => {\n      this.promoteAuxValue();\n    }, 3000);\n  }\n\n  stopPromotionTimeout() {\n    if (!this.promotionTimeout) return;\n    clearTimeout(this.promotionTimeout);\n    this.promotionTimeout = undefined;\n  }\n\n  backspace() {\n    this.promoteAuxValue();\n    this.inputTextValue = this.inputTextValue.length > 0 ?\n      this.inputTextValue.substring(0, this.inputTextValue.length - 1) : this.inputTextValue;\n    this.redraw();\n  }\n\n  clear() {\n    this.promoteAuxValue();\n    this.inputTextValue = '';\n    this.inputTextAuxValue = '';\n    this.redraw();\n  }\n}\n","import { InputText } from './inputText';\nimport { rotateOffsetDegree } from './rotaryValues';\n\nconst JOG_DEGREE_STEP = 2;\nconst JOG_DEGREE_MS = 4;\n\ninterface IPosition { x, y }\n\nexport class RotaryDialMachine {\n  private center: IPosition;\n\n  startUserPosition: IPosition;\n  lastUserPosition: IPosition;\n\n  lastRotationPosition: IPosition;\n  maxRotationDegree: number;\n  hitMinRotationForInput: boolean;\n  currentRotationDegrees: number = 0;\n\n  index = null;\n  currentRotaryValueIndex = null;\n  currentRotaryAuxIndex = -1;\n\n  inputText: InputText;\n\n  private lockInput: boolean;\n\n  constructor(\n    domRect,\n    private rotaryDial,\n  ) {\n    this.center = {\n      x: domRect.x + domRect.width / 2.0,\n      y: domRect.y + domRect.height / 2.0\n    };\n  }\n\n  userDown(position: IPosition) {\n    if (this.lockInput) { return; }\n    this.startUserPosition = position;\n    this.lastUserPosition = position;\n\n    const vecA = calcVector(this.center, { ...this.center, x: this.center.x + 10 });\n    const vecB = calcVector(this.center, position);\n    const radians = Math.acos(calcDotProduct(vecA, vecB) / (calcMagnitude(vecA) * calcMagnitude(vecB)));\n\n    const determinant = calcDeterminant(vecA, vecB);\n    let degree = radians * (180 / Math.PI);\n\n    if (determinant > 0) {\n      degree = 360 - degree;\n    }\n\n    this.index = Math.floor((degree - rotateOffsetDegree) / 30);\n    if (this.index < 0 || this.index > 9) {\n      this.index = null;\n      this.startUserPosition = null;\n      return;\n    }\n\n    if (this.inputText) {\n      this.inputText.stopPromotionTimeout();\n    }\n    this.maxRotationDegree = 45 + this.index * 30;\n  }\n\n  userMove(position: IPosition) {\n    if (!this.startUserPosition) { return; }\n    const vecA = calcVector(this.center, this.lastUserPosition);\n    const vecB = calcVector(this.center, position);\n\n    const radians = Math.acos(calcDotProduct(vecA, vecB) / (calcMagnitude(vecA) * calcMagnitude(vecB)));\n    const degree = radians * (180 / Math.PI);\n\n    const determinant = calcDeterminant(vecA, vecB);\n\n    this.lastUserPosition = position;\n\n    if (Number.isNaN(radians) || radians === 0) { return; }\n\n    if (determinant > 0) {\n      const newRotationDegree = this.currentRotationDegrees + degree;\n      this.hitMinRotationForInput = this.hitMinRotationForInput || newRotationDegree > this.maxRotationDegree - 10;\n      this.currentRotationDegrees = newRotationDegree > this.maxRotationDegree ? this.maxRotationDegree : newRotationDegree;\n\n      this.rotaryDial.style.transform = `rotate(${Math.floor(this.currentRotationDegrees)}deg)`;\n      console.log('currentRotaionDegree:',this.currentRotationDegrees);\n\n    }\n    console.log(degree);\n\n  }\n\n  userUp() {\n    if (!this.startUserPosition) { return; }\n    this.startUserPosition = null;\n    this.lockInput = true;\n    this.jogBack();\n  }\n\n  async jogBack() {\n    if (this.currentRotationDegrees <= 0) {\n      this.currentRotationDegrees = 0;\n      this.lockInput = false;\n      if (this.hitMinRotationForInput) {\n        this.sendInput();\n      }\n      if (this.inputText) {\n        this.inputText.startPromotionTimeout();\n      }\n      this.hitMinRotationForInput = false;\n      return true;\n    }\n\n    const newRotation = this.currentRotationDegrees - JOG_DEGREE_STEP;\n    this.currentRotationDegrees = newRotation > 0 ? newRotation : 0;\n    this.rotaryDial.style.transform = `rotate(${this.currentRotationDegrees}deg)`;\n\n    await waitMs(JOG_DEGREE_MS);\n    return this.jogBack();\n  }\n\n  sendInput() {\n    if (!this.inputText) { return; }\n    this.inputText.setAuxIndex(this.index);\n  }\n\n  setInputText(inputText: InputText) {\n    this.inputText = inputText;\n  }\n}\n\nfunction calcVector(start: IPosition, end: IPosition) {\n  const startEndVector = {\n    x: end.x - start.x,\n    y: end.y - start.y\n  };\n\n  return startEndVector;\n}\n\nfunction calcMagnitude(vector: IPosition) {\n  return Math.sqrt(vector.x ** 2 + vector.y ** 2);\n}\n\nfunction calcDotProduct(a: IPosition, b: IPosition) {\n  return a.x * b.x + a.y * b.y;\n}\n\nfunction calcDeterminant(a: IPosition, b: IPosition) {\n  return a.x * b.y - a.y * b.x;\n}\n\nasync function waitMs(ms: number) {\n  await new Promise((resolve) => {\n    setTimeout(() => { resolve(''); }, ms);\n  });\n}\n","export const mainOffset = 110;\nexport const rotarySelectOffset = 30;\n\nexport const rotateOffsetDegree = 5;\nexport const maxRotationOffset = 45;\n\nexport const rotaryUpperValues = [\n  { text: ['1'] },\n  { text: ['2', 'A', 'B', 'C'] },\n  { text: ['3', 'D', 'E', 'F'] },\n  { text: ['4', 'G', 'H', 'I'] },\n  { text: ['5', 'J', 'K', 'L'] },\n  { text: ['6', 'M', 'N', 'O'] },\n  { text: ['7', 'P', 'R', 'S'] },\n  { text: ['8', 'T', 'U', 'V'] },\n  { text: ['9', 'W', 'X', 'Y'] },\n  { text: ['0'] },\n];\n\nexport const rotaryLowerValues = [\n  { text: ['1'] },\n  { text: ['2', 'a', 'b', 'c'] },\n  { text: ['3', 'd', 'e', 'f'] },\n  { text: ['4', 'g', 'h', 'i'] },\n  { text: ['5', 'j', 'k', 'l'] },\n  { text: ['6', 'm', 'n', 'o'] },\n  { text: ['7', 'p', 'r', 's'] },\n  { text: ['8', 't', 'u', 'v'] },\n  { text: ['9', 'w', 'x', 'y'] },\n  { text: ['0'] },\n];\n\nexport const rotarySpecialValues = [\n  { text: ['1', '!', '`', '~'] },\n  { text: ['2', '@', '[', ']'] },\n  { text: ['3', '#', '{', '}'] },\n  { text: ['4', '$', '/', '='] },\n  { text: ['5', '%', '?', '+'] },\n  { text: ['6', '^', '-', '_'] },\n  { text: ['7', '&', ':', ';'] },\n  { text: ['8', '*', '\\\\', '|'] },\n  { text: ['9', '(', '\"', ','] },\n  { text: ['0', ')', '.', '\\''] },\n];\n\nexport const findValue = (val, rotaryValues) => {\n  const valueRowIndex = rotaryValues.findIndex((row) => {\n    return row.text.includes(val);\n  });\n\n  if (valueRowIndex < 0) {\n    return null;\n  }\n\n  const textIndex = rotaryValues[valueRowIndex].text.findIndex((item) => {\n    return item === val;\n  });\n\n  return {\n    rowIndex: valueRowIndex,\n    valueIndex: textIndex\n  };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { CanvasDrawer } from './canvasDrawer';\nimport { InputText } from './inputText';\nimport { RotaryDialMachine } from './rotaryDialMachine';\nimport { rotaryLowerValues, rotarySpecialValues, rotaryUpperValues } from './rotaryValues';\n\nlet rotaryPin: any;\nlet rotaryDial: any;\nlet rotaryDialMachine: RotaryDialMachine;\n\nlet rotaryBaseCanvas: any;\nlet rotaryDialCanvas: any;\nlet rotaryPinCanvas: any;\n\nlet usernameText;\nlet usernameTextValue;\nlet usernameTextAux;\n\nlet passwordText;\nlet passwordTextValue;\nlet passwordTextAux;\n\nlet inputTextMachine;\n\nlet selectorLowerCase;\nlet selectorUpperCase;\nlet selectorSpecialCase;\n\nlet clearUsernameButton;\nlet clearPasswordButton;\n\nlet canvasDrawer;\n\nlet defaultRotaryValues = rotaryLowerValues;\n\nfunction init() {\n  loadElements();\n\n  canvasDrawer = new CanvasDrawer(rotaryBaseCanvas, rotaryDialCanvas, rotaryPinCanvas, defaultRotaryValues);\n  rotaryDialMachine = new RotaryDialMachine(rotaryDial.getBoundingClientRect(), rotaryDial);\n\n  setupMouseInputs();\n  setupTouchInputs();\n\n  selectorActivate(selectorUpperCase);\n  usernameText.dispatchEvent(new MouseEvent('mousedown', {\n    view: window,\n    bubbles: true,\n    cancelable: false\n  }));\n}\n\nfunction login() {\n  const username = usernameText.getAttribute('p');\n  const password = passwordText.getAttribute('p');\n  if (username.toLowerCase() === 'root' && password === 'fo0B4r!') {\n    window.alert(`LOGIN SUCCESSFUL! ${username}:${password}`);\n  } else {\n    window.alert(`LOGIN UNSUCCESSFUL? ${username}:${password}`);\n  }\n}\n\nfunction loadElements() {\n  rotaryDial = document.getElementById('rotaryDial');\n  rotaryPin = document.getElementById('rotaryPin');\n\n  rotaryBaseCanvas = document.getElementById('rotaryBaseCanvas');\n  rotaryDialCanvas = document.getElementById('rotaryDialCanvas');\n  rotaryPinCanvas = document.getElementById('rotaryPinCanvas');\n\n  usernameText = document.getElementById('usernameText');\n  usernameTextValue = document.getElementById('usernameTextValue');\n  usernameTextAux = document.getElementById('usernameTextAux');\n\n  passwordText = document.getElementById('passwordText');\n  passwordTextValue = document.getElementById('passwordTextValue');\n  passwordTextAux = document.getElementById('passwordTextAux');\n\n  selectorLowerCase = document.getElementById('selectorLowerCase');\n  selectorUpperCase = document.getElementById('selectorUpperCase');\n  selectorSpecialCase = document.getElementById('selectorSpecialCase');\n\n  clearUsernameButton = document.getElementById('clearUsername');\n  clearPasswordButton = document.getElementById('clearPassword');\n}\n\nfunction setupMouseInputs() {\n  usernameText.addEventListener('mousedown', (e) => {\n    deactivateInputStyle(passwordText);\n    activateInputStyle(usernameText);\n    inputTextMachine = new InputText(usernameTextValue, usernameTextAux, usernameText, false, defaultRotaryValues);\n    rotaryDialMachine.setInputText(inputTextMachine);\n  });\n\n  passwordText.addEventListener('mousedown', (e) => {\n    deactivateInputStyle(usernameText);\n    activateInputStyle(passwordText);\n    inputTextMachine = new InputText(passwordTextValue, passwordTextAux, passwordText, true, defaultRotaryValues);\n    rotaryDialMachine.setInputText(inputTextMachine);\n  });\n\n  document.body.addEventListener('mouseup', (e) => {\n    rotaryDialMachine.userUp();\n  });\n\n  rotaryDial.addEventListener('mousedown', (e) => {\n    rotaryDialMachine.userDown({ x: e.x, y: e.y });\n  });\n\n  rotaryPin.addEventListener('mousedown', (e) => {\n    rotaryDialMachine.userDown({ x: e.x, y: e.y });\n  });\n\n  document.body.addEventListener('mousemove', (e) => {\n    rotaryDialMachine.userMove({ x: e.x, y: e.y });\n  });\n\n  document.body.addEventListener('keydown', (event) => {\n    if (event.code === 'Backspace' && inputTextMachine) {\n      inputTextMachine.backspace();\n    }\n  });\n\n  selectorLowerCase.addEventListener('mousedown', (e) => { selectorActivate(selectorLowerCase); });\n  selectorUpperCase.addEventListener('mousedown', (e) => { selectorActivate(selectorUpperCase); });\n  selectorSpecialCase.addEventListener('mousedown', (e) => { selectorActivate(selectorSpecialCase); });\n  clearUsernameButton.addEventListener('mousedown', (e) => { clearUsername(); })\n  clearPasswordButton.addEventListener('mousedown', (e) => { clearPassword(); })\n}\n\nfunction setupTouchInputs() {\n  usernameText.addEventListener('touchstart', (e) => {\n    deactivateInputStyle(passwordText);\n    activateInputStyle(usernameText);\n    inputTextMachine = new InputText(usernameTextValue, usernameTextAux, usernameText, false, defaultRotaryValues);\n    rotaryDialMachine.setInputText(inputTextMachine);\n  });\n\n  passwordText.addEventListener('touchstart', (e) => {\n    deactivateInputStyle(usernameText);\n    activateInputStyle(passwordText);\n    inputTextMachine = new InputText(passwordTextValue, passwordTextAux, passwordText, true, defaultRotaryValues);\n    rotaryDialMachine.setInputText(inputTextMachine);\n  });\n\n  document.body.addEventListener('touchend', (e) => {\n    rotaryDialMachine.userUp();\n  });\n  document.body.addEventListener('touchcancel', (e) => {\n    rotaryDialMachine.userUp();\n  });\n\n  rotaryDial.addEventListener('touchstart', (e) => {\n    const touchItem = e.touches.item(0);\n    rotaryDialMachine.userDown({ x: touchItem.pageX, y: touchItem.pageY });\n  });\n\n  rotaryPin.addEventListener('touchstart', (e) => {\n    const touchItem = e.touches.item(e.touches.length - 1);\n    rotaryDialMachine.userDown({ x: touchItem.pageX, y: touchItem.pageY });\n  });\n\n  document.body.addEventListener('touchmove', (e) => {\n    const touchItem = e.touches.item(e.touches.length - 1);\n    rotaryDialMachine.userMove({ x: touchItem.pageX, y: touchItem.pageY });\n  });\n\n  document.body.addEventListener('keydown', (event) => {\n    if (event.code === 'Backspace' && inputTextMachine) {\n      inputTextMachine.backspace();\n    }\n  });\n\n  selectorLowerCase.addEventListener('mousedown', (e) => { selectorActivate(selectorLowerCase); });\n  selectorUpperCase.addEventListener('mousedown', (e) => { selectorActivate(selectorUpperCase); });\n  selectorSpecialCase.addEventListener('mousedown', (e) => { selectorActivate(selectorSpecialCase); });\n}\n\nfunction deactivateInputStyle(selector) {\n  selector.classList.remove('border-violet-300');\n  selector.classList.add('border-slate-300');\n}\nfunction activateInputStyle(selector) {\n  selector.classList.remove('border-slate-300');\n  selector.classList.add('border-violet-300');\n}\n\nfunction selectorActivate(selector) {\n  selectorDeactivate(selectorLowerCase);\n  selectorDeactivate(selectorUpperCase);\n  selectorDeactivate(selectorSpecialCase);\n\n  selector.classList.remove('hover:bg-blue-700');\n  selector.classList.remove('bg-blue-500');\n  selector.classList.add('bg-blue-900');\n\n  if (selector === selectorLowerCase) {\n    setRotaryValues(rotaryLowerValues);\n  }\n  if (selector === selectorUpperCase) {\n    setRotaryValues(rotaryUpperValues);\n  }\n  if (selector === selectorSpecialCase) {\n    setRotaryValues(rotarySpecialValues);\n  }\n}\n\nfunction selectorDeactivate(selector) {\n  selector.classList.remove('bg-blue-500');\n  selector.classList.remove('bg-blue-900');\n  selector.classList.add('bg-blue-500');\n  selector.classList.add('hover:bg-blue-700');\n}\n\nfunction setRotaryValues(rotaryValues) {\n  canvasDrawer.setRotaryValues(rotaryValues);\n  inputTextMachine?.setRotaryValues(rotaryValues);\n  defaultRotaryValues = rotaryValues;\n}\n\nfunction clearUsername() {\n  inputTextMachine.clear();\n}\n\nfunction clearPassword() {\n  inputTextMachine.clear();\n}\n\n(window as any).init = init;\n(window as any).login = login;\n(window as any).selectorActivate = selectorActivate;\n"],"names":["circleRadius","drawRadius","baseOpts","lineWidth","color","fill","clip","constructor","rotaryBaseCanvas","rotaryDialCanvas","rotaryPinCanvas","rotaryValues","this","drawRotaryBase","drawRotaryDial","drawRotaryPin","setRotaryValues","canvas","clearCanvas","drawCircle","forEach","textObj","i","drawText","mainOffset","rotarySelectOffset","circleBackground","circleOpts","drawLineOnCircle","context","getContext","centerX","width","centerY","height","x","x1","y","y1","circleXY","x2","y2","beginPath","strokeStyle","fillStyle","moveTo","lineTo","stroke","radius1","radius2","theta","r","radius","font","textAlign","textBaseline","fillText","text","length","x3","y3","opts","arc","Math","PI","globalCompositeOperation","restore","clearRect","thetaRad","cos","sin","inputText","inputTextAux","rootElement","isPassword","defaultRotaryValues","inputTextValue","inputTextAuxValue","getAttribute","promoteAuxValue","setAuxIndex","index","console","log","value","currentRotaryAuxIndex","rowIndex","valueIndex","redraw","stopPromotionTimeout","textValue","repeat","textValueAux","textContent","setAttribute","startPromotionTimeout","promotionTimeout","setTimeout","clearTimeout","undefined","backspace","substring","clear","calcVector","start","end","calcMagnitude","vector","sqrt","calcDotProduct","a","b","calcDeterminant","domRect","rotaryDial","currentRotationDegrees","currentRotaryValueIndex","center","userDown","position","lockInput","startUserPosition","lastUserPosition","vecA","vecB","radians","acos","determinant","degree","floor","rotateOffsetDegree","maxRotationDegree","userMove","Number","isNaN","newRotationDegree","hitMinRotationForInput","style","transform","userUp","jogBack","sendInput","newRotation","async","Promise","resolve","waitMs","setInputText","maxRotationOffset","rotaryUpperValues","rotaryLowerValues","rotarySpecialValues","findValue","val","valueRowIndex","findIndex","row","includes","item","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","rotaryPin","rotaryDialMachine","usernameText","usernameTextValue","usernameTextAux","passwordText","passwordTextValue","passwordTextAux","inputTextMachine","selectorLowerCase","selectorUpperCase","selectorSpecialCase","clearUsernameButton","clearPasswordButton","canvasDrawer","deactivateInputStyle","selector","classList","remove","add","activateInputStyle","selectorActivate","selectorDeactivate","window","init","document","getElementById","CanvasDrawer","RotaryDialMachine","getBoundingClientRect","addEventListener","e","InputText","body","event","code","touchItem","touches","pageX","pageY","dispatchEvent","MouseEvent","view","bubbles","cancelable","login","username","password","toLowerCase","alert"],"sourceRoot":""}